/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import C.EntradasProducto.entradasproducto;
import C.Funciones.Instancias;
import C.Parametros.datosempresa;
import C.TreeRenderer.UncheckedCustomizeJTMenu;
import UUID.enviaruuid;
import UUID.uuid;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import static java.awt.GraphicsDevice.WindowTranslucency.PERPIXEL_TRANSLUCENT;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.SwingUtilities;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;

/**
 *
 * @author jraraujo
 */
public class Menu extends javax.swing.JFrame {
    
    GetSet.gs_login gs = new GetSet.gs_login();
    public static int idusu;
    public static String usu, rol;
    Instancias inst = new Instancias();
    C.Conexion.Conexion cc = new C.Conexion.Conexion();
    UncheckedCustomizeJTMenu uct = new UncheckedCustomizeJTMenu();    
    uuid u = new uuid();
    enviaruuid uuid = new enviaruuid();    
    boolean maximizado;
    JLabel jlmaxbckgrnd, jlminbckgrnd; 
    public static int idcompania;
    public static String compania="";   
    public static String rol_login;
    public static int CONECTADO;
    DefaultMutableTreeNode selectedNode;
    String node;
    datosempresa datos = new datosempresa();
    entradasproducto entpro = new entradasproducto();
        
    /**
     * Creates new form Menu
     * @throws java.sql.SQLException
     */
    public Menu() throws SQLException {        
        initComponents();
        this.setLocationRelativeTo(null);
        uct.cutomizeTree(jtmenu);
        
        ImageIcon leafIcon = new ImageIcon(getClass().getResource("/Imagenes/document.png"));
            if (leafIcon != null) {
                DefaultTreeCellRenderer renderer = 
                    new DefaultTreeCellRenderer();
                renderer.setLeafIcon(leafIcon);
                jtmenu.setCellRenderer(renderer);
            }
        ImageIcon openIcon = new ImageIcon(getClass().getResource("/Imagenes/ofolder.png"));
            if (leafIcon != null) {
                DefaultTreeCellRenderer renderer = 
                    new DefaultTreeCellRenderer();
                renderer.setOpenIcon(openIcon);
                jtmenu.setCellRenderer(renderer);
            }
            
        entpro.obtenerMin();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jptransparente = new javax.swing.JPanel();
        jlfenix = new javax.swing.JLabel();
        jscrolltree = new javax.swing.JScrollPane();
        jtmenu = new javax.swing.JTree();
        jlmensaje = new javax.swing.JLabel();
        jpbutton = new javax.swing.JPanel();
        jbcsesion = new javax.swing.JButton();
        jbsalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Himawari[Menu] " + "Compa√±ia: "+idcompania+"-"+compania+"   "+ "ID: "+idusu+" Usuario: "+usu);
        setBackground(Color.decode("#C70039"));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        setResizable(false);
        setSize(new Dimension(Toolkit.getDefaultToolkit().getScreenSize().width,
            Toolkit.getDefaultToolkit().getScreenSize().height));
    addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            formMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            formMouseEntered(evt);
        }
    });
    addWindowListener(new java.awt.event.WindowAdapter() {
        public void windowClosing(java.awt.event.WindowEvent evt) {
            formWindowClosing(evt);
        }
        public void windowOpened(java.awt.event.WindowEvent evt) {
            formWindowOpened(evt);
        }
    });

    jptransparente.setBackground(new java.awt.Color(255, 255, 255));

    jlfenix.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/himawari_2.png"))); // NOI18N

    jscrolltree.setOpaque(false);

    jtmenu.setForeground(new java.awt.Color(255, 255, 255));
    javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
    jtmenu.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
    jtmenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jtmenu.addTreeExpansionListener(new javax.swing.event.TreeExpansionListener() {
        public void treeCollapsed(javax.swing.event.TreeExpansionEvent evt) {
        }
        public void treeExpanded(javax.swing.event.TreeExpansionEvent evt) {
            jtmenuTreeExpanded(evt);
        }
    });
    jtmenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jtmenuMouseClicked(evt);
        }
    });
    jscrolltree.setViewportView(jtmenu);

    jlmensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jlmensaje.setText("Copyright Reserved Consultoria SER0. Himawari Software 2021");
    jlmensaje.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

    jpbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    jpbutton.setOpaque(false);

    jbcsesion.setForeground(Color.decode("#C70039")
    );
    jbcsesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/changeuser.png"))); // NOI18N
    jbcsesion.setText("Cambiar Sesion");
    jbcsesion.setOpaque(false);
    jbcsesion.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jbcsesionActionPerformed(evt);
        }
    });

    jbsalir.setForeground(Color.decode("#C70039"));
    jbsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logout.png"))); // NOI18N
    jbsalir.setText("Salir");
    jbsalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jbsalir.setOpaque(false);
    jbsalir.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jbsalirActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jpbuttonLayout = new javax.swing.GroupLayout(jpbutton);
    jpbutton.setLayout(jpbuttonLayout);
    jpbuttonLayout.setHorizontalGroup(
        jpbuttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jpbuttonLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jbcsesion)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jbsalir)
            .addContainerGap())
    );
    jpbuttonLayout.setVerticalGroup(
        jpbuttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jpbuttonLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jpbuttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbcsesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbsalir))
            .addContainerGap())
    );

    javax.swing.GroupLayout jptransparenteLayout = new javax.swing.GroupLayout(jptransparente);
    jptransparente.setLayout(jptransparenteLayout);
    jptransparenteLayout.setHorizontalGroup(
        jptransparenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jlmensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jptransparenteLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jptransparenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(jptransparenteLayout.createSequentialGroup()
                    .addComponent(jlfenix)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jscrolltree, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jpbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jptransparenteLayout.setVerticalGroup(
        jptransparenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jptransparenteLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jptransparenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jlfenix, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jscrolltree))
            .addGap(9, 9, 9)
            .addComponent(jpbutton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jlmensaje)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jptransparente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jptransparente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        CONECTADO = 1;
        datos.actualizaEstadoCC(CONECTADO);
        u.generarUUID();
        //uuid.enviarNotificacion();
        cc.desconectar();
        
    }//GEN-LAST:event_formWindowOpened

    private void jbsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsalirActionPerformed

        Icon fenix = new ImageIcon(getClass().getResource("/Imagenes/s_Fenix.png"));
        Object[] opciones = {"Aceptar","Cancelar"};
        int mensaje = JOptionPane.showOptionDialog(this, "¬øEsta seguro que desea cerrar?", "HIMAWARI", 
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, fenix, opciones, opciones[0]);
        if(mensaje == JOptionPane.OK_OPTION){
            JOptionPane.showMessageDialog(this, "¬°Vuelve Pronto!", "HIMAWARI POS", JOptionPane.OK_OPTION, fenix);
            CONECTADO = 0;
            u.generarUUID();
            datos.actualizaEstadoCC(CONECTADO);
            //uuid.enviarNotificacion();            
            System.exit(0);
        }
        
    }//GEN-LAST:event_jbsalirActionPerformed

    private void jtmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtmenuMouseClicked
                  
    if(evt.getClickCount() == 2){          
        selectedNode = (DefaultMutableTreeNode) jtmenu.getSelectionPath().getLastPathComponent();
        node = selectedNode.getUserObject().toString();
        System.out.println(node);
        switch (node) {
            case "Registro de Ventas":
                inst.getInstanciaConsultaVentas();                                     
                break;
            case "Reporte de Ventas":
                inst.getInstanciaReporteVentas();
                break;
            case "Registro de Compras":
                try {
                    inst.getInstanciaCompras();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }   break;
            case "Consulta de Compras":
                try {
                    inst.getInstanciaConsultaCompras();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }   break;
            case "Edici√≥n de Precios":
                inst.getInstanciaEdicionPrecios();
                break;
            case "Registro de Devoluciones":
                inst.getInstanciasDevoluciones();
                break;
            case "Registro de Proveedores":
                inst.getInstanciaProveedores();
                break;
            case "Categorias":
                try {
                    inst.getInstanciaCategorias();
                } catch (SQLException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }   break;
            case "Productos":
                try {
                    inst.getInstanciaProductos();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }   break;
            case "Entradas de Producto":
                inst.getInstanciasEntradaProducto();
                break;
            case "Movimientos al Almacen":
                inst.getInstanciasMovimientosAlmacen();
                break;
            case "Almacenes":
                inst.getInstanciasAlmacenes();
                break;
            case "Pasillos":
                inst.getInstanciasPasillos();
                break;
            case "Anaqueles":
                inst.getInstanciasAnaqueles();
                break;
            case "Bines":
                inst.getInstanciasBin();
                break;
            case "Ajustes a Inventarios":
                inst.getInstanciasAjustesInventario();
                break;
            case "Corte":
                try {
                    inst.getInstanciaCorte();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }   break;
            case "Caja":
                try {
                    inst.getInstanciaCaja();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }   break;
            case "Montos por Almacen":
                inst.getInstanciasMontosAlmacen();
                break;
            case "Registro de Usuarios":
                inst.getInstanciaEmpleados();
                break;
            case "Empresas":
                inst.getInstanciasDatosEmpresa();
                break;
            case "Roles":
                inst.getInstanciasParametros();
                break;
            default:
                break;
        }
    }       
        
    }//GEN-LAST:event_jtmenuMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

        if(evt.getClickCount() == 2){
            if(maximizado == true){
                try {
                    this.dispose();
                    this.setUndecorated(false);
                    inst.getInstanciaMenuMin();
                    maximizado = false;
                } catch (SQLException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else if(maximizado == false){ 
                this.dispose();                
                this.setUndecorated(true);                                
                this.setBackground(Color.decode("#C70039"));
                jpbutton.setBounds(5, 515, 590, 60);
                jlmaxbckgrnd = new JLabel();
                jlmaxbckgrnd.setName("jlmaxbckgrnd");
                jlmaxbckgrnd.setPreferredSize(new Dimension(500, Toolkit.getDefaultToolkit().getScreenSize().height));
                jlmaxbckgrnd.setBounds(700, 0, 700, Toolkit.getDefaultToolkit().getScreenSize().height);
                ImageIcon maxbck = new ImageIcon(getClass().getResource("/Imagenes/maxbckgrnd.png"));
                jlmaxbckgrnd.setIcon(maxbck);
                                 
                jlmensaje.setBounds(10, 736, Toolkit.getDefaultToolkit().getScreenSize().width, 13);
                jlmensaje.setHorizontalTextPosition(JLabel.CENTER);
                jptransparente.add(jpbutton);
                               
                jptransparente.add(jlmensaje);
                jptransparente.add(jlmaxbckgrnd);
                this.setExtendedState(JFrame.MAXIMIZED_BOTH);
                this.setVisible(true);    
                int high = Toolkit.getDefaultToolkit().getScreenSize().height;
                System.out.println(high);                
                maximizado = true;
                Instancias._menu = null;
            }
        }
        
    }//GEN-LAST:event_formMouseClicked

    private void jbcsesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbcsesionActionPerformed

        try {
            cc.conexionMySql("127.0.0.1", "3306", "root", "tittan");
            Login log = new Login();
            log.setVisible(true);
            this.dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jbcsesionActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        Icon fenix = new ImageIcon(getClass().getResource("/Imagenes/s_Fenix.png"));
        Object[] opciones = {"Aceptar","Cancelar"};
        int mensaje = JOptionPane.showOptionDialog(this, "¬øEsta seguro que desea cerrar?", "HIMAWARI", 
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
        if(mensaje == JOptionPane.OK_OPTION){
            JOptionPane.showMessageDialog(this, "¬°Vuelve Pronto!", "HIMAWARI POS", JOptionPane.OK_OPTION, fenix);
            CONECTADO = 0;
            u.generarUUID();
            datos.actualizaEstadoCC(CONECTADO);
            //uuid.enviarNotificacion();            
            System.exit(0);
        }
        
    }//GEN-LAST:event_formWindowClosing

    private void jtmenuTreeExpanded(javax.swing.event.TreeExpansionEvent evt) {//GEN-FIRST:event_jtmenuTreeExpanded

        
                
    }//GEN-LAST:event_jtmenuTreeExpanded

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    /**,
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>
        
        GraphicsEnvironment ge = 
            GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gd = ge.getDefaultScreenDevice();
        boolean isPerPixelTranslucencySupported = 
            gd.isWindowTranslucencySupported(PERPIXEL_TRANSLUCENT);

        //If translucent windows aren't supported, exit.
        if (!isPerPixelTranslucencySupported) {
            System.out.println(
                "Per-pixel translucency is not supported");
                System.exit(0);
        }
        JFrame.setDefaultLookAndFeelDecorated(true);

        // Create the GUI on the event-dispatching thread
        SwingUtilities.invokeLater(() -> {
            Login log = new Login();            
            // Display the window.
            log.setVisible(true);
        });

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Menu().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbcsesion;
    private javax.swing.JButton jbsalir;
    private javax.swing.JLabel jlfenix;
    private javax.swing.JLabel jlmensaje;
    private javax.swing.JPanel jpbutton;
    private javax.swing.JPanel jptransparente;
    private javax.swing.JScrollPane jscrolltree;
    public static javax.swing.JTree jtmenu;
    // End of variables declaration//GEN-END:variables
    
public class MyTreeCellRenderer extends DefaultTreeCellRenderer {

    @Override
    public Component getTreeCellRendererComponent(JTree tree, Object value,
            boolean sel, boolean exp, boolean leaf, int row, boolean hasFocus) {
        super.getTreeCellRendererComponent(tree, value, sel, exp, leaf, row, hasFocus);

        // Assuming you have a tree of Strings
        String node = (String) ((DefaultMutableTreeNode) value).getUserObject();

        // If the node is a leaf and ends with "xxx"
        if (leaf && node.endsWith("s") || leaf && node.endsWith("e") || leaf && node.endsWith("a")) {
            // Paint the node in blue
            setForeground(new Color(255, 87, 51));
        }

        return this;
    }
}
    
    @Override
    public Image getIconImage() {
       Image retValue = Toolkit.getDefaultToolkit().
             getImage(ClassLoader.getSystemResource("Imagenes/usuario.png"));

       return retValue;
    }   
   
}
