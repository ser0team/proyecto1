/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames.Parametros;

import C.TreeRenderer.UncheckedCustomizeTree;
import C.Funciones.Instancias;
import C.Funciones.JTextAreaMessages;
import C.TreeRenderer.UncheckedNodeTreeCellRenderer;
import C.Parametros.parametros;
import C.TreeRenderer.MyTreeNode;
import Frames.Menu;
import GetSet.gs_parametros;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JTree;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jraraujo
 */
public class Parametros extends javax.swing.JFrame {    
    parametros par = new parametros();
    JTextAreaMessages jtm = new JTextAreaMessages();    
    Instancias inst = new Instancias();        
    UncheckedCustomizeTree uct = new UncheckedCustomizeTree();
    MyTreeNode myTreeNode = new MyTreeNode();
    gs_parametros gs = new gs_parametros();
    public static String icon;    
    public static int path;
    DefaultTableModel  dtm;
    boolean parent, existe, listaexiste; 
    int row;
    String nombre, leaf;
    public static boolean valorusuario;
    int controles, listindex, tableindex;
       
     /**
     * Creates new form Parametros
     */
    public Parametros() {
        initComponents();
        this.setLocationRelativeTo(null);        
        jtrol.expandRow(0);
        uct.cutomizeTree(jtrol);        
        icon = "multiply.png";
        jtrol.setCellRenderer(new UncheckedNodeTreeCellRenderer());     
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbusuario = new javax.swing.JButton();
        jtxtidusuario = new javax.swing.JTextField();
        jtxtusuario = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jproles = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtrol = new javax.swing.JTree();
        jpcontroles = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtcontroles = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jbguardar = new javax.swing.JButton();
        jbcancelar = new javax.swing.JButton();
        jbremover = new javax.swing.JButton();
        jbsalir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlista = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Himawari[Roles]");
        setIconImage(getIconImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(Color.decode("#C70039"));

        jbusuario.setText("Usuario:");
        jbusuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbusuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbusuarioActionPerformed(evt);
            }
        });

        jtxtidusuario.setEditable(false);

        jtxtusuario.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtidusuario, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbusuario)
                    .addComponent(jtxtidusuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtusuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel4.setOpaque(false);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jtrol.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jtrol.setEnabled(false);
        jtrol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtrolMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtrol);

        javax.swing.GroupLayout jprolesLayout = new javax.swing.GroupLayout(jproles);
        jproles.setLayout(jprolesLayout);
        jprolesLayout.setHorizontalGroup(
            jprolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jprolesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jprolesLayout.setVerticalGroup(
            jprolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jprolesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jtcontroles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Controles"
            }
        ));
        jtcontroles.setShowHorizontalLines(false);
        jtcontroles.setShowVerticalLines(false);
        jtcontroles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtcontrolesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtcontroles);

        javax.swing.GroupLayout jpcontrolesLayout = new javax.swing.GroupLayout(jpcontroles);
        jpcontroles.setLayout(jpcontrolesLayout);
        jpcontrolesLayout.setHorizontalGroup(
            jpcontrolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpcontrolesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpcontrolesLayout.setVerticalGroup(
            jpcontrolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpcontrolesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(Color.decode("#C70039"));

        jbguardar.setText("Guardar");
        jbguardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbguardarActionPerformed(evt);
            }
        });

        jbcancelar.setText("Cancelar");
        jbcancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbcancelarActionPerformed(evt);
            }
        });

        jbremover.setText("Remover");
        jbremover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbremoverActionPerformed(evt);
            }
        });

        jbsalir.setText("Salir");
        jbsalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbsalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbguardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbcancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbremover, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbguardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbcancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbremover)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbsalir)
                .addContainerGap())
        );

        jlista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Controles Asignados"
            }
        ));
        jlista.setShowHorizontalLines(false);
        jScrollPane3.setViewportView(jlista);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jproles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpcontroles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jproles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jpcontroles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        Instancias._parametros = null;
        
    }//GEN-LAST:event_formWindowClosing

    private void jbusuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbusuarioActionPerformed

        inst.getInstanciasListarEmpleados();
              
    }//GEN-LAST:event_jbusuarioActionPerformed

    private void jbguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbguardarActionPerformed
        if(jtxtidusuario.getText().equals("")){
            jtm.jTextAreaMessage("No se ha seleccionado un usuario");
        }else{            
            for(int i = 0; i < jtcontroles.getRowCount(); i++){
                par.jbguardar(Integer.parseInt(jtxtidusuario.getText()), 
                        jtcontroles.getValueAt(i, 0).toString(), 
                        Menu.idcompania);                 
            }
            jtm.jTextAreaMessage("Cambios guardados con exito");
            par.mostrarRoles(jlista, Integer.parseInt(jtxtidusuario.getText()));
            DefaultTableModel tb = (DefaultTableModel) jtcontroles.getModel();
            int a = jtcontroles.getRowCount()-1;
            for (int i = a; i >= 0; i--) {          
                tb.removeRow(tb.getRowCount()-1);
            }
        }
    }//GEN-LAST:event_jbguardarActionPerformed

    private void jbsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsalirActionPerformed

        Instancias._parametros = null;
        this.dispose();
    }//GEN-LAST:event_jbsalirActionPerformed

    private void jtrolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtrolMouseClicked
                                     
        JTree auxiliar = new JTree(jtrol.getModel());
        for(int i = 0; i < auxiliar.getRowCount(); i++){
            auxiliar.expandRow(i);
        }
        
        path = auxiliar.getRowForPath(jtrol.getSelectionPath())-1;
        System.out.println(path);                                 
        
        if(path == -1 || path == 0 || path == 1 || path ==6 
                || path == 13 || path == 14 || path == 27 || path == 36 
                ||path == 46 || path == 59 || path == 60 || path == 67 
                || path == 68 || path == 75 || path == 84 || path == 97 
                || path == 107 || path == 108 || path == 115 || path == 123 
                || path == 131 || path == 139 || path == 143 || path == 144 
                || path == 151 || path == 158 || path == 159){
            System.out.println("Invalido");
        }else{
            switch (path) {
                case 2:
                    leaf = "cven_NuevaVenta";
                    getValue();
                    getValueList();
                    break;
                case 3:
                    leaf = "cven_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 4:
                    leaf = "cven_Factura";
                    getValue();
                    getValueList();
                    break;
                case 5:
                    leaf = "cven_Buscar";
                    getValue();
                    getValueList();
                    break;
                case 7:
                    leaf = "ven_Nuevo";
                    getValue();
                    getValueList();
                    break;
                case 8:
                    leaf = "ven_Anadir";
                    getValue();
                    getValueList();
                    break;
                case 9:
                    leaf = "ven_Miscelaneo";                    
                    getValue();
                    getValueList();
                    break;
                case 10:
                    leaf = "ven_Remover";
                    getValue();
                    getValueList();
                    break;
                case 11:
                    leaf = "ven_Saldar";
                    getValue();
                    getValueList();
                    break;
                case 12:
                    leaf = "ven_Buscar";
                    getValue();
                    getValueList();
                    break;
                case 15:
                    leaf = "com_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 16:
                    leaf = "com_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 17:
                    leaf = "com_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 18:
                    leaf = "com_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 19:
                    leaf = "com_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 20:
                    leaf = "com_Proveedor";
                    getValue();
                    getValueList();
                    break;
                case 21:
                    leaf = "com_Agregar";
                    getValue();
                    getValueList();
                    break;
                case 22:
                    leaf = "com_Producto";
                    getValue();
                    getValueList();
                    break;
                case 23:
                    leaf = "com_Almacen";
                    getValue();
                    getValueList();
                    break;
                case 24:
                    leaf = "com_Pasillo";
                    getValue();
                    getValueList();
                    break;
                case 25:
                    leaf = "com_Anaquel";
                    getValue();
                    getValueList();
                    break;
                case 26:
                    leaf = "com_Bin";
                    getValue();
                    getValueList();
                    break;
                case 28:
                    leaf = "cc_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 29:
                    leaf = "cc_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 30:
                    leaf = "cc_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 31:
                    leaf = "cc_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 32:
                    leaf = "cc_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 33:
                    leaf = "cc_Ajustes";
                    getValue();
                    getValueList();
                    break;
                case 34:
                    leaf = "cc_Proveedor";
                    getValue();
                    getValueList();
                    break;
                case 35:
                    leaf = "cc_Buscar";
                    getValue();
                    getValueList();
                    break;
                case 37:
                    leaf = "ep_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 38:
                    leaf = "ep_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 39:
                    leaf = "ep_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 40:
                    leaf = "ep_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 41:
                    leaf = "ep_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 42:
                    leaf = "ep_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 43:
                    leaf = "ep_Producto";
                    getValue();
                    getValueList();
                    break;
                case 44:
                    leaf = "ep_Ajustes";
                    getValue();
                    getValueList();
                    break;
                case 45:
                    leaf = "ep_Actualizar";
                    getValue();
                    getValueList();
                    break;
                case 47:
                    leaf = "dv_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 48:
                    leaf = "dv_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 49:
                    leaf = "dv_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 50:
                    leaf = "dv_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 51:
                    leaf = "dv_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 52:
                    leaf = "dv_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 53:
                    leaf = "dv_Venta";
                    getValue();
                    getValueList();
                    break;
                case 54:
                    leaf = "dv_Producto";
                    getValue();
                    getValueList();
                    break;
                case 55:
                    leaf = "dv_Almacen";
                    getValue();
                    getValueList();
                    break;
                case 56:
                    leaf = "dv_Pasillo";
                    getValue();
                    getValueList();
                    break;
                case 57:
                    leaf = "dv_Anaquel";
                    getValue();
                    getValueList();
                    break;
                case 58:
                    leaf = "dv_Bin";
                    getValue();
                    getValueList();
                    break;
                case 61:
                    leaf = "pv_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 62:
                    leaf = "pv_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 63:
                    leaf = "pv_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 64:
                    leaf = "pv_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 65:
                    leaf = "pv_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 66:
                    leaf = "pv_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 69:
                    leaf = "cl_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 70:
                    leaf = "cl_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 71:
                    leaf = "cl_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 72:
                    leaf = "cl_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 73:
                    leaf = "cl_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 74:
                    leaf = "cl_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 76:
                    leaf = "pr_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 77:
                    leaf = "pr_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 78:
                    leaf = "pr_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 79:
                    leaf = "pr_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 80:
                    leaf = "pr_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 81:
                    leaf = "pr_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 82:
                    leaf = "pr_ProductosDeshabilitados";
                    getValue();
                    getValueList();
                    break;    
                
                case 83:
                    leaf = "pr_Proveedor";
                    getValue();
                    getValueList();
                    break;
                case 84:
                    leaf = "pr_Categoria";
                    getValue();
                    getValueList();
                    break;                
                case 86:
                    leaf = "ent_Guardar";
                    getValue();
                    getValueList();
                    break;    
                case 87:
                    leaf = "ent_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 88:
                    leaf = "ent_Eliminar";
                    getValue();
                    getValueList();
                    break;    
                case 89:
                    leaf = "ent_Exportar";
                    getValue();
                    getValueList();
                    break; 
                case 90:
                    leaf = "ent_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 91:
                    leaf = "ent_Compra";
                    getValue();
                    getValueList();
                    break;                      
                case 92:
                    leaf = "ent_Almacen";
                    getValue();
                    getValueList();
                    break;
                case 93:
                    leaf = "ent_Pasillo";
                    getValue();
                    getValueList();
                    break;
                case 94:
                    leaf = "ent_Anaquel";
                    getValue();
                    getValueList();
                    break;
                case 95:
                    leaf = "ent_Bin";
                    getValue();
                    getValueList();
                    break;
                 case 96:
                    leaf = "ent_Producto";
                    getValue();
                    getValueList();
                    break;                   
                case 97:
                    leaf = "ent_ActCant";
                    getValue();
                    getValueList();
                    break;                 
                case 99:
                    leaf = "movalm_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 100:
                    leaf = "movalm_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 101:
                    leaf = "movalm_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 102:
                    leaf = "movalm_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 103:
                    leaf = "movalm_Producto";
                    getValue();
                    getValueList();
                    break;
                case 104: 
                    leaf = "movalm_Almacen";
                    getValue();
                    getValueList();
                    break;
                case 105:
                    leaf = "movalm_Pasillo";
                    getValue();
                    getValueList();
                    break;
                case 106:
                    leaf = "movalm_Anaquel";
                    getValue();
                    getValueList();
                    break;
                case 107:
                    leaf = "movalm_Bin";
                    getValue();
                    getValueList();
                    break;                    
                case 110:
                    leaf = "al_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 111:
                    leaf = "al_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 112:
                    leaf = "al_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 113:
                    leaf = "al_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 114:
                    leaf = "al_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 115:
                    leaf = "al_Reporte";
                    getValue();
                    getValueList();
                    break;                              
                case 117:
                    leaf = "ps_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 118:
                    leaf = "ps_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 119:
                    leaf = "ps_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 120:
                    leaf = "ps_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 121:
                    leaf = "ps_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 122:
                    leaf = "ps_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 123:
                    leaf = "ps_Almacen";
                    getValue();
                    getValueList();
                    break;
                case 125:
                    leaf = "an_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 126:
                    leaf = "an_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 127:
                    leaf = "an_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 128:
                    leaf = "an_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 129:
                    leaf = "an_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 130:
                    leaf = "an_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 131:
                    leaf = "an_Pasillo";
                    getValue();
                    getValueList();
                    break;
                case 133:
                    leaf = "bn_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 134:
                    leaf = "bn_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 135:
                    leaf = "bn_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 136:
                    leaf = "bn_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 137:
                    leaf = "bn_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 138:
                    leaf = "bn_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 139:
                    leaf = "bn_Anaquel";
                    getValue();
                    getValueList();
                    break;
                case 141:
                    leaf = "aj_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 142:
                    leaf = "aj_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 143:
                    leaf = "aj_Producto";
                    getValue();
                    getValueList();
                    break;                 
                case 144:
                    leaf = "ct_Ccorte";
                    getValue();
                    getValueList();
                    break;
                case 145:
                    leaf = "ct_Scorte";
                    getValue();
                    getValueList();
                    break;
                case 148:
                    leaf = "ct_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 149:
                    leaf = "ct_Reporte";
                    getValue();
                    getValueList();
                    break;
                case 150:
                    leaf = "ct_Buscar";
                    getValue();
                    getValueList();
                    break;
                case 151:
                    leaf = "ct_Exportar";
                    getValue();
                    getValueList();
                    break;                    
                case 153:
                    leaf = "cj_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 154:
                    leaf = "cj_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 155:
                    leaf = "cj_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 156:
                    leaf = "cj_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 157:
                    leaf = "cj_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 158:
                    leaf = "cj_Reporte";
                    getValue();
                    getValueList();
                    break;                    
                case 161:
                    leaf = "em_Guardar";
                    getValue();
                    getValueList();
                    break;
                case 162:
                    leaf = "em_Cancelar";
                    getValue();
                    getValueList();
                    break;
                case 163:
                    leaf = "em_Eliminar";
                    getValue();
                    getValueList();
                    break;
                case 164:
                    leaf = "em_Modificar";
                    getValue();
                    getValueList();
                    break;
                case 165:
                    leaf = "em_Exportar";
                    getValue();
                    getValueList();
                    break;
                case 166:
                    leaf = "em_Reporte";
                    getValue();
                    getValueList();
                    break;
                default:
                    break;
            }
            add();
        }
            
              
    }//GEN-LAST:event_jtrolMouseClicked

    private void jbcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbcancelarActionPerformed

        dtm.setRowCount(0);
        
    }//GEN-LAST:event_jbcancelarActionPerformed

    private void jbremoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbremoverActionPerformed
             
        if(String.valueOf(tableindex).equals("") || String.valueOf(listindex).equals("")){
            jtm.jTextAreaMessage("No se ha seleccionado registro");
        }else{
            if(controles == 1){
                dtm.removeRow(jtcontroles.getSelectedRow());
            }else if(controles == 0){
                par.eliminarRol(Integer.parseInt(jtxtidusuario.getText()));
            }
//            par.jbremover(Integer.parseInt(jtxtidusuario.getText()));                      
        }
                
    }//GEN-LAST:event_jbremoverActionPerformed

    private void jtcontrolesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtcontrolesMouseClicked
         tableindex  = jtcontroles.getSelectedRow()+1;
         System.out.println(tableindex);
         controles = 1;
         listindex = 2;
    }//GEN-LAST:event_jtcontrolesMouseClicked
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Parametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Parametros().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JButton jbcancelar;
    public static javax.swing.JButton jbguardar;
    public static javax.swing.JButton jbremover;
    public static javax.swing.JButton jbsalir;
    public static javax.swing.JButton jbusuario;
    public static javax.swing.JTable jlista;
    private javax.swing.JPanel jpcontroles;
    private javax.swing.JPanel jproles;
    public static javax.swing.JTable jtcontroles;
    public static javax.swing.JTree jtrol;
    public static javax.swing.JTextField jtxtidusuario;
    public static javax.swing.JTextField jtxtusuario;
    // End of variables declaration//GEN-END:variables

    public int countRows(){
        try{
            for(int i = 0; i < jtcontroles.getRowCount(); i++){
                row = i;
            }
        }catch(Exception ex){
            jtm.jTextAreaError("ERROR: Counted Rows 001."+ex.getMessage(), ex);
        }   
        return row;
    }
    
    public boolean getValue(){
        try{
            existe = false;
            for(int i = 0; i<jtcontroles.getRowCount(); i++){
                if(jtcontroles.getValueAt(i, 0).equals(leaf)){
                    existe = true;
                }
            }
        }catch(Exception ex){
            jtm.jTextAreaError("ERROR: Counted Rows 001."+ex.getMessage(), ex);
        }  
        return existe;
    }
    
    public boolean getValueList(){
        try{
            listaexiste = false;
            for(int i = 0; i<jlista.getRowCount(); i++){
                if(jlista.getValueAt(i, 0).equals(leaf)){
                    existe = true;
                }
            }
        }catch(Exception ex){
            jtm.jTextAreaError("ERROR: Counted Rows 002."+ex.getMessage(), ex);
        }  
        return listaexiste;
    }
    
    public void add(){
        if(existe == true || listaexiste == true){
            jtm.jTextAreaMessage("Valor duplicado");
        }else{
            dtm = (DefaultTableModel) jtcontroles.getModel();
            String[] data = new String[1];
            try{
                switch (path) {                         
                    case 2:
                        icon = "checklist.png";
                        gs.setNombre("cven_NuevaVenta");                               
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 3:
                        icon = "checklist.png";
                        gs.setNombre("cven_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 4:
                        icon = "checklist.png";
                        gs.setNombre("cven_Factura");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 5:
                        icon = "checklist.png";
                        gs.setNombre("cven_Buscar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 7:
                        icon = "checklist.png";
                        gs.setNombre("ven_Nuevo");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 8:
                        icon = "checklist.png";
                        gs.setNombre("ven_Anadir");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 9:
                        icon = "checklist.png";
                        gs.setNombre("ven_Miscelaneo");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 10:
                        icon = "checklist.png";
                        gs.setNombre("ven_Remover");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 11:
                        icon = "checklist.png";
                        gs.setNombre("ven_Saldar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 12:
                        icon = "checklist.png";
                        gs.setNombre("ven_Buscar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 15:
                        icon = "checklist.png";
                        gs.setNombre("com_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 16:
                        icon = "checklist.png";
                        gs.setNombre("com_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 17:
                        icon = "checklist.png";
                        gs.setNombre("com_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 18:
                        icon = "checklist.png";
                        gs.setNombre("com_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 19:
                        icon = "checklist.png";
                        gs.setNombre("com_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 20:
                        icon = "checklist.png";
                        gs.setNombre("com_Proveedor");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 21:
                        icon = "checklist.png";
                        gs.setNombre("com_Agregar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 22:
                        icon = "checklist.png";
                        gs.setNombre("com_Producto");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 23:
                        icon = "checklist.png";
                        gs.setNombre("com_Almacen");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 24:
                        icon = "checklist.png";
                        gs.setNombre("com_Pasillo");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 25:
                        icon = "checklist.png";
                        gs.setNombre("com_Anaquel");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 26:
                        icon = "checklist.png";
                        gs.setNombre("com_Bin");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 28:
                        icon = "checklist.png";
                        gs.setNombre("cc_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 29:
                        icon = "checklist.png";
                        gs.setNombre("cc_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 30:
                        icon = "checklist.png";
                        gs.setNombre("cc_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 31:
                        icon = "checklist.png";
                        gs.setNombre("cc_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 32:
                        icon = "checklist.png";
                        gs.setNombre("cc_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 33:
                        icon = "checklist.png";
                        gs.setNombre("cc_Ajustes");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 34:
                        icon = "checklist.png";
                        gs.setNombre("cc_Proveedor");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 35:
                        icon = "checklist.png";
                        gs.setNombre("cc_Buscar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 37:
                        icon = "checklist.png";
                        gs.setNombre("ep_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 38:
                        icon = "checklist.png";
                        gs.setNombre("ep_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 39:
                        icon = "checklist.png";
                        gs.setNombre("ep_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 40:
                        icon = "checklist.png";
                        gs.setNombre("ep_Modificar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 41:
                        icon = "checklist.png";
                        gs.setNombre("ep_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 42:
                        icon = "checklist.png";
                        gs.setNombre("ep_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 43:
                        icon = "checklist.png";
                        gs.setNombre("ep_Producto");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 44:
                        icon = "checklist.png";
                        gs.setNombre("ep_Ajustes");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 45:
                        icon = "checklist.png";
                        gs.setNombre("ep_Actualizar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 47:
                        icon = "checklist.png";
                        gs.setNombre("dv_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 48:
                        icon = "checklist.png";
                        gs.setNombre("dv_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 49:
                        icon = "checklist.png";
                        gs.setNombre("dv_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 50:
                        icon = "checklist.png";
                        gs.setNombre("dv_Modificar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 51:
                        icon = "checklist.png";
                        gs.setNombre("dv_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 52:
                        icon = "checklist.png";
                        gs.setNombre("dv_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 53:
                        icon = "checklist.png";
                        gs.setNombre("dv_Venta");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 54:
                        icon = "checklist.png";
                        gs.setNombre("dv_Producto");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 55:
                        icon = "checklist.png";
                        gs.setNombre("dv_Almacen");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 56:
                        icon = "checklist.png";
                        gs.setNombre("dv_Pasillo");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 57:
                        icon = "checklist.png";
                        gs.setNombre("dv_Anaquel");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 58:
                        icon = "checklist.png";
                        gs.setNombre("dv_Bin");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 61:
                        icon = "checklist.png";
                        gs.setNombre("pv_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 62:
                        icon = "checklist.png";
                        gs.setNombre("pv_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 63:
                        icon = "checklist.png";
                        gs.setNombre("pv_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 64:
                        icon = "checklist.png";
                        gs.setNombre("pv_Modificar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 65:
                        icon = "checklist.png";
                        gs.setNombre("pv_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 66:
                        icon = "checklist.png";
                        gs.setNombre("pv_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 69:
                        icon = "checklist.png";
                        gs.setNombre("cl_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 70:
                        icon = "checklist.png";
                        gs.setNombre("cl_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 71:
                        icon = "checklist.png";
                        gs.setNombre("cl_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 72:
                        icon = "checklist.png";
                        gs.setNombre("cl_Modificar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 73:
                        icon = "checklist.png";
                        gs.setNombre("cl_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 74:
                        icon = "checklist.png";
                        gs.setNombre("cl_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 76:
                        icon = "checklist.png";
                        gs.setNombre("pr_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 77:
                        icon = "checklist.png";
                        gs.setNombre("pr_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 78:
                        icon = "checklist.png";
                        gs.setNombre("pr_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 79:
                        icon = "checklist.png";
                        gs.setNombre("pr_Modificar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 80:
                        icon = "checklist.png";
                        gs.setNombre("pr_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 81:
                        icon = "checklist.png";
                        gs.setNombre("pr_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 82:
                        icon = "checklist.png";
                        gs.setNombre("pr_ProductosDeshabilitados");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                        
                        
                    case 83:
                        icon = "checklist.png";
                        gs.setNombre("pr_Proveedor");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 84:
                        icon = "checklist.png";
                        gs.setNombre("pr_Categoria");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                    
                    case 86:
                        icon = "checklist.png";
                        gs.setNombre("ent_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                    
                    case 87:
                        icon = "checklist.png";
                        gs.setNombre("ent_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                    
                    case 88:
                        icon = "checklist.png";
                        gs.setNombre("ent_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                    
                    case 89:
                        icon = "checklist.png";
                        gs.setNombre("ent_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break; 
                    case 90:
                        icon = "checklist.png";
                        gs.setNombre("ent_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 91:
                        icon = "checklist.png";
                        gs.setNombre("ent_Compra");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                     
                    case 92:
                        icon = "checklist.png";
                        gs.setNombre("ent_Almacen");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 93:
                        icon = "checklist.png";
                        gs.setNombre("ent_Pasillo");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 94:
                        icon = "checklist.png";
                        gs.setNombre("ent_Anaquel");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 95:
                        icon = "checklist.png";
                        gs.setNombre("ent_Bin");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 96:
                        icon = "checklist.png";
                        gs.setNombre("ent_Producto");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                    
                    case 97:
                        icon = "checklist.png";
                        gs.setNombre("ent_ActCant");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 99:
                        icon = "checklist.png";
                        gs.setNombre("movalm_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 100:
                        icon = "checklist.png";
                        gs.setNombre("movalm_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 101:
                        icon = "checklist.png";
                        gs.setNombre("movalm_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 102:
                        icon = "checklist.png";
                        gs.setNombre("movalm_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 103:
                        icon = "checklist.png";
                        gs.setNombre("movalm_Producto");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 104:
                        icon = "checklist.png";
                        gs.setNombre("movalm_Almacen");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                      
                    case 105:
                        icon = "checklist.png";                    
                        gs.setNombre("movalm_Pasillo");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 106:
                        icon = "checklist.png";                    
                        gs.setNombre("movalm_Anaquel");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 107:
                        icon = "checklist.png";                    
                        gs.setNombre("movalm_Bin");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                
                    case 110:
                        icon = "checklist.png";
                        gs_parametros gs73 = new gs_parametros();
                        gs73.setNombre("al_Guardar");
                        data[0] = gs73.getNombre();
                        dtm.addRow(data);
                        break;                  
                    case 111:
                        icon = "checklist.png";
                        gs_parametros gs74 = new gs_parametros();
                        gs74.setNombre("al_Cancelar");
                        data[0] = gs74.getNombre();
                        dtm.addRow(data);
                        break;
                    case 112:
                        icon = "checklist.png";
                        gs_parametros gs75 = new gs_parametros();
                        gs75.setNombre("al_Eliminar");
                        data[0] = gs75.getNombre();
                        dtm.addRow(data);
                        break;                
                    case 113:
                        icon = "checklist.png";
                        gs_parametros gs76 = new gs_parametros();
                        gs76.setNombre("al_Modificar");
                        data[0] = gs76.getNombre();
                        dtm.addRow(data);
                        break;
                    case 114:
                        icon = "checklist.png";
                        gs_parametros gs77 = new gs_parametros();
                        gs77.setNombre("al_Exportar");
                        data[0] = gs77.getNombre();
                        dtm.addRow(data);
                        break;
                    case 115:
                        icon = "checklist.png";
                        gs_parametros gs78 = new gs_parametros();
                        gs78.setNombre("al_Reporte");
                        data[0] = gs78.getNombre();
                        dtm.addRow(data);
                        break;
                    case 117:
                        icon = "checklist.png";
                        gs_parametros gs79 = new gs_parametros();
                        gs79.setNombre("ps_Guardar");
                        data[0] = gs79.getNombre();
                        dtm.addRow(data);
                        break;
                    case 118:
                        icon = "checklist.png";
                        gs_parametros gs80 = new gs_parametros();
                        gs80.setNombre("ps_Cancelar");
                        data[0] = gs80.getNombre();
                        dtm.addRow(data);
                        break;
                    case 119:
                        icon = "checklist.png";
                        gs_parametros gs81 = new gs_parametros();
                        gs81.setNombre("ps_Eliminar");
                        data[0] = gs81.getNombre();
                        dtm.addRow(data);
                        break;
                    case 120:
                        icon = "checklist.png";
                        gs_parametros gs82 = new gs_parametros();
                        gs82.setNombre("ps_Modificar");
                        data[0] = gs82.getNombre();
                        dtm.addRow(data);
                        break;
                    case 121:
                        icon = "checklist.png";                        
                        gs.setNombre("ps_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 122:
                        icon = "checklist.png";                        
                        gs.setNombre("ps_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 123:
                        icon = "checklist.png";                        
                        gs.setNombre("ps_Almacen");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 125:
                        icon = "checklist.png";                        
                        gs.setNombre("an_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 126:
                        icon = "checklist.png";                        
                        gs.setNombre("an_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 127:
                        icon = "checklist.png";                        
                        gs.setNombre("an_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 128:
                        icon = "checklist.png";                        
                        gs.setNombre("an_Modificar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 129:
                        icon = "checklist.png";                        
                        gs.setNombre("an_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 130:
                        icon = "checklist.png";                        
                        gs.setNombre("an_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 131:
                        icon = "checklist.png";                        
                        gs.setNombre("an_Pasillo");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 133:
                        icon = "checklist.png";                        
                        gs.setNombre("bn_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 134:
                        icon = "checklist.png";                        
                        gs.setNombre("bn_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 135:
                        icon = "checklist.png";                        
                        gs.setNombre("bn_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 136:
                        icon = "checklist.png";                        
                        gs.setNombre("bn_Modificar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 137:
                        icon = "checklist.png";                        
                        gs.setNombre("bn_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 138:
                        icon = "checklist.png";                        
                        gs.setNombre("bn_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 139:
                        icon = "checklist.png";                    
                        gs.setNombre("bn_Anaquel");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 141:
                        icon = "checklist.png";                    
                        gs.setNombre("aj_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 142:
                        icon = "checklist.png";                    
                        gs.setNombre("aj_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                   
                    case 143:
                        icon = "checklist.png";                    
                        gs.setNombre("aj_Producto");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;                                 
                    case 144:
                        icon = "checklist.png";                        
                        gs.setNombre("ct_Ccorte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 147:
                        icon = "checklist.png";                        
                        gs.setNombre("ct_Scorte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 148:
                        icon = "checklist.png";                    
                        gs.setNombre("ct_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 149:
                        icon = "checklist.png";                    
                        gs.setNombre("ct_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 150:
                        icon = "checklist.png";                    
                        gs.setNombre("ct_Buscar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 151:
                        icon = "checklist.png";                    
                        gs.setNombre("ct_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 153:
                        icon = "checklist.png";
                        gs_parametros gs102 = new gs_parametros();
                        gs102.setNombre("cj_Guardar");
                        data[0] = gs102.getNombre();
                        dtm.addRow(data);
                        break;
                    case 154:
                        icon = "checklist.png";                    
                        gs.setNombre("cj_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 155:
                        icon = "checklist.png";                    
                        gs.setNombre("cj_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 156:
                        icon = "checklist.png";                    
                        gs.setNombre("cj_Modificar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 157:
                        icon = "checklist.png";                    
                        gs.setNombre("cj_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 158:
                        icon = "checklist.png";                    
                        gs.setNombre("cj_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 161:
                        icon = "checklist.png";                    
                        gs.setNombre("em_Guardar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 162:
                        icon = "checklist.png";                    
                        gs.setNombre("em_Cancelar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 163:
                        icon = "checklist.png";                    
                        gs.setNombre("em_Eliminar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 164:
                        icon = "checklist.png";                    
                        gs.setNombre("em_Modificar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 165:
                        icon = "checklist.png";                    
                        gs.setNombre("em_Exportar");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    case 166:
                        icon = "checklist.png";                    
                        gs.setNombre("em_Reporte");
                        data[0] = gs.getNombre();
                        dtm.addRow(data);
                        break;
                    default:
                        break;
                }        
                jtcontroles.setModel(dtm);
            }catch(Exception ex){
                jtm.jTextAreaError("ERROR: Get Values 001."+ex.getMessage(), ex);
            }
        }
    } 
    
        @Override
        public Image getIconImage() {        
        
           Image retValue = Toolkit.getDefaultToolkit().
                 getImage(ClassLoader.getSystemResource("Imagenes/usuario.png"));

           return retValue;
        }
}





